- name: Add netfilter Modules
  lineinfile:
    path: "/etc/modules"
    state: present
    regexp: "^br_netfilter$"
    line: "br_netfilter"

- name: Load modules
  modprobe:
    name: br_netfilter
    state: present

- name: Sysctls
  sysctl: 
    name: "{{ item }}"
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward 
    - net.bridge.bridge-nf-call-ip6tables

- name: "Setup packages"
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present


- name: Adding additional repo for libseccomp2
  apt_repository:
    repo: ppa:ubuntu-sdk-team/ppa
    state: absent

- name: Adding additional repo for libseccomp2
  apt_repository:
    repo: deb http://deb.debian.org/debian buster-backports main
    state: present
    update_cache: yes

- name: Install  dependecies
  apt: 
    name: "libseccomp2"
    default_release: "buster-backports"
    state: latest
    update_cache: yes



- name: Install docker and its dependecies
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io

- name: Setup Docker systemd cgroup driver
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json

- name: "Setup services"
  service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items:
      - docker

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list


- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl


- name: "Setup kubelet"
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
      - kubelet


- name: Pull Kubernetes images
  command: "kubeadm config images pull --kubernetes-version={{ kube_version }}"
  tags:
    - skip_ansible_lint
